---
- hosts: webservers
  become: true
  tasks:
#    - name: Install prerequisites
#      apt: 
#        name: aptitude 
#        update_cache: yes 
#        state: latest 
#        force: yes
    #  
    - name: Install LAMP Packages
      apt: 
        name: "{{ item }}" 
        update_cache: yes 
        state: latest
      loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]     
             
    - name: Install PHP Add-ons
      apt: 
        name: "{{ item }}" 
        update_cache: yes 
        state: latest
      loop: [ 'php-curl', 'php-gd', 'php-mbstring', 'php-xml', 'php-xmlrpc', 'php-soap', 'php-intl', 'php-zip' ]     

    - name: Create the root account/password
      mysql_user:
        name: root
        password: "testing"
        login_unix_socket: /var/run/mysqld/mysqld.sock
  
    - name: Configure SQL DB for WordPress
      mysql_db:
        name: "Wordpress"
        state: present
        login_user: root
        login_password: "testing"
      
    - name: Create directory for domain to host Wordpress
      file:
        path: "/var/www/testwordpress"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: '0755'
      
    - name: Set up Apache VirtualHost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/testwordpress.conf"
             
    - name: Enable new site
      shell: /usr/sbin/a2ensite testwordpress.conf
      
    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
 
    - name: Enable rewrite module
      shell: /usr/sbin/a2enmod rewrite
           
    - name: Restart Apache to save configuration changes
      service:
        name: apache2
        state: restarted

    - name: "Allow HTTP on port 80"
      ufw:
        rule: allow
        port: "80"
        proto: tcp

  # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/testwordpress"
        remote_src: yes
        creates: "/var/www/testwordpress/wordpress"
      
    - name: Set ownership for the untarred Wordpress files
      file:
        path: "/var/www/testwordpress"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
      
    - name: Set permissions for Wordpress directories
      shell: "/usr/bin/find /var/www/testwordpress/wordpress/ -type d -exec chmod 750 {} \\;"
      
    - name: Set permissions for Wordpress files
      shell: "/usr/bin/find /var/www/testwordpress/wordpress/ -type f -exec chmod 640 {} \\;"
      
    - name: Push wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/testwordpress/wordpress/wp-config.php"
      
  # Apache Configuration
  #  - name: Create document root
  #    file:
  #      path: "/var/www/{{ http_host }}"
  #      state: directory
  #      owner: "www-data"
  #      group: "www-data"
  #      mode: '0755'
  #    tags: [ apache ]

  #  - name: Set up Apache VirtualHost
  #    template:
  #      src: "files/apache.conf.j2"
  #      dest: "/etc/apache2/sites-available/{{ http_conf }}"
  #    notify: Reload Apache
  #    tags: [ apache ]

  #  - name: Enable rewrite module
  #    shell: /usr/sbin/a2enmod rewrite
  #    notify: Reload Apache
  #    tags: [ apache ]

  #  - name: Enable new site
  #    shell: /usr/sbin/a2ensite {{ http_conf }}
  #    notify: Reload Apache
  #    tags: [ apache ]

  #  - name: Disable default Apache site
  #    shell: /usr/sbin/a2dissite 000-default.conf
  #    notify: Restart Apache
  #    tags: [ apache ]

  ## MySQL Configuration
  #  - name: Set the root password
  #    mysql_user:
  #      name: root
  #      password: "{{ mysql_root_password }}"
  #      login_unix_socket: /var/run/mysqld/mysqld.sock
  #    tags: [ mysql, mysql-root ]

  #  - name: Remove all anonymous user accounts
  #    mysql_user:
  #      name: ''
  #      host_all: yes
  #      state: absent
  #      login_user: root
  #      login_password: "{{ mysql_root_password }}"
  #    tags: [ mysql ]

  #  - name: Remove the MySQL test database
  #    mysql_db:
  #      name: test
  #      state: absent
  #      login_user: root
  #      login_password: "{{ mysql_root_password }}"
  #    tags: [ mysql ]

  #  - name: Creates database for WordPress
  #    mysql_db:
  #      name: "{{ mysql_db }}"
  #      state: present
  #      login_user: root
  #      login_password: "{{ mysql_root_password }}"
  #    tags: [ mysql ]

  #  - name: Create MySQL user for WordPress
  #    mysql_user:
  #      name: "{{ mysql_user }}"
  #      password: "{{ mysql_password }}"
  #      priv: "{{ mysql_db }}.*:ALL"
  #      state: present
  #      login_user: root
  #      login_password: "{{ mysql_root_password }}"
  #    tags: [ mysql ]

  ## UFW Configuration
  #  - name: "UFW - Allow HTTP on port {{ http_port }}"
  #    ufw:
  #      rule: allow
  #      port: "{{ http_port }}"
  #      proto: tcp
  #    tags: [ system ]

  ## WordPress Configuration
  #  - name: Download and unpack latest WordPress
  #    unarchive:
  #      src: https://wordpress.org/latest.tar.gz
  #      dest: "/var/www/{{ http_host }}"
  #      remote_src: yes
  #      creates: "/var/www/{{ http_host }}/wordpress"
  #    tags: [ wordpress ]

  #  - name: Set ownership
  #    file:
  #      path: "/var/www/{{ http_host }}"
  #      state: directory
  #      recurse: yes
  #      owner: www-data
  #      group: www-data
  #    tags: [ wordpress ]

  #  - name: Set permissions for directories
  #    shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
  #    tags: [ wordpress ]

  #  - name: Set permissions for files
  #    shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
  #    tags: [ wordpress ]

  #  - name: Set up wp-config
  #    template:
  #      src: "files/wp-config.php.j2"
  #      dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
  #    tags: [ wordpress ]

  #handlers:
  #  - name: Reload Apache
  #    service:
  #      name: apache2
  #      state: reloaded

  #  - name: Restart Apache
  #    service:
  #      name: apache2
  #      state: restarted
